# Generated by Django 3.0.5 on 2020-05-29 13:17

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AppAction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now=True, verbose_name="Tidspunkt"),
                ),
                ("address", models.CharField(max_length=100, verbose_name="Adresse")),
                ("action", models.CharField(max_length=100, verbose_name="Handling")),
            ],
        ),
        migrations.CreateModel(
            name="BBR",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Adresse"
                    ),
                ),
                ("zip_code", models.IntegerField(verbose_name="Postnummer")),
                ("kvhx", models.CharField(max_length=200, verbose_name="kvhx")),
                ("construction_year", models.IntegerField(verbose_name="Byggeår")),
                (
                    "reconstruction_year",
                    models.IntegerField(verbose_name="Renoveringsår"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CategoricalBBR",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "residential_type",
                    models.CharField(
                        choices=[
                            ("one_fam", "Enfamiliehuse"),
                            ("farm", "Stuehuse til landbrug"),
                            ("row", "Række/kæde-huse"),
                            ("multi", "Dobbelt-/flerfamiliehuse"),
                            ("story", "Etageboliger"),
                            ("oth", "Anden, herunder kollegier"),
                        ],
                        max_length=200,
                        verbose_name="Boligtype",
                    ),
                ),
                (
                    "heat_type",
                    models.CharField(
                        choices=[
                            ("1", "Fjernvarme/blokvarme"),
                            ("2", "Centralvarme fra eget anlæg, et-kammer fyr"),
                            ("3", "Ovne"),
                            ("5", "Varmepumpe"),
                            ("6", "\tCentralvarme med to fyringsenheder"),
                            ("7", "Elovne, elpaneler"),
                            ("8", "Gasradiator"),
                            ("9", "\tIngen varmeinstallation"),
                            ("99", "Blandet"),
                        ],
                        max_length=200,
                        verbose_name="Opvarmningsform",
                    ),
                ),
                (
                    "energy_type",
                    models.CharField(
                        choices=[
                            ("1", "Gas fra værk"),
                            ("2", "230 V el fra værk"),
                            ("3", "400 V el fra værk"),
                            ("4", "Både 230 V el og gas fra værk"),
                            ("5", "Både 400 V el og gas fra værk"),
                            ("6", "Hverken el eller gas fra værk"),
                        ],
                        max_length=200,
                        verbose_name="Energiforsyning",
                    ),
                ),
                (
                    "roof_material",
                    models.CharField(
                        choices=[
                            ("rock", "Cementsten"),
                            ("asphalt", "Tagpap"),
                            ("builtup", ""),
                            ("rockasbt", ""),
                            ("brick", ""),
                            ("fiber", ""),
                            ("green", ""),
                            ("metal", ""),
                            ("thatched", ""),
                            ("pvc", ""),
                            ("glas", ""),
                            ("oth", ""),
                        ],
                        max_length=200,
                        verbose_name="Tagmateriale",
                    ),
                ),
                (
                    "wall_material",
                    models.CharField(
                        choices=[
                            ("1", "Mursten"),
                            ("2", "Letbeton"),
                            ("3", "Plader af fibercement"),
                            ("4", "Bindingsværk"),
                            ("5", "Træbeklædning"),
                            ("6", "Betonelementer (etagehøje betonelementer)"),
                            ("8", "Metalplader"),
                            ("10", "Fibercement (asbestfri)"),
                            ("11", "PVC"),
                            ("12", "Glas"),
                            ("80", "Ingen"),
                            ("90", "Andet materiale"),
                        ],
                        max_length=200,
                        verbose_name="Ydervægsmateriale",
                    ),
                ),
                (
                    "water_supply",
                    models.CharField(
                        choices=[
                            ("1", "Alment vandforsyningsanlæg (tidligere offentligt)"),
                            ("2", "Privat, alment vandforsyningsanlæg"),
                            (
                                "3",
                                "\tEnkeltindvindingsanlæg (egen boring til 1 eller 2 ejendomme)",
                            ),
                            ("4", "Brønd"),
                            (
                                "6",
                                "Ikke alment vandforsyningsanlæg (forsyner < 10 ejendomme)",
                            ),
                            ("9", "\tIngen vandforsyning"),
                        ],
                        max_length=200,
                        verbose_name="Vandforsyning",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city_name", models.CharField(max_length=200, verbose_name="Bynavn")),
                (
                    "zip_code_start",
                    models.IntegerField(verbose_name="Postnummer start"),
                ),
                ("zip_code_end", models.IntegerField(verbose_name="Postnummer slut")),
            ],
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Navn")),
                (
                    "value",
                    models.CharField(max_length=200, null=True, verbose_name="Værdi"),
                ),
                ("type", models.CharField(max_length=200, verbose_name="Type")),
                (
                    "description",
                    models.CharField(max_length=400, verbose_name="Beskrivelse"),
                ),
                ("source", models.CharField(max_length=200, verbose_name="Kilde")),
            ],
        ),
        migrations.CreateModel(
            name="House",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Adresse"
                    ),
                ),
                ("zip_code", models.IntegerField(null=True, verbose_name="Postnummer")),
                (
                    "kvhx",
                    models.CharField(max_length=200, null=True, verbose_name="Kvhx"),
                ),
                ("utm_x", models.FloatField(null=True, verbose_name="UTM X")),
                ("utm_y", models.FloatField(null=True, verbose_name="UTM Y")),
                ("lat", models.FloatField(null=True, verbose_name="Latitude")),
                ("lon", models.FloatField(null=True, verbose_name="Longitude")),
                (
                    "soil_type",
                    models.CharField(max_length=200, null=True, verbose_name="Jordart"),
                ),
                (
                    "bbr",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_models.BBR",
                    ),
                ),
                ("cities", models.ManyToManyField(to="data_models.City")),
            ],
        ),
        migrations.CreateModel(
            name="NumericBBR",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("building_area", models.IntegerField(verbose_name="Bygning areal")),
                ("ground_area", models.IntegerField(verbose_name="Grund areal")),
                ("garage_area", models.IntegerField(verbose_name="Garage areal")),
                ("carport_area", models.IntegerField(verbose_name="Carport areal")),
                ("outhouse_area", models.IntegerField(verbose_name="Udestue areal")),
                ("roof_area", models.IntegerField(verbose_name="Loft areal")),
                ("basement_area", models.IntegerField(verbose_name="Kælder areal")),
                ("commercial_area", models.IntegerField(verbose_name="Erhvervs areal")),
                ("num_baths", models.IntegerField(verbose_name="Antal badeværelser")),
                ("num_toilets", models.IntegerField(verbose_name="Antal toiletter")),
                ("num_rooms", models.IntegerField(verbose_name="Antal værelser")),
                ("num_floors", models.IntegerField(verbose_name="Antal etager")),
            ],
        ),
        migrations.CreateModel(
            name="Suggestion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "komfort_value",
                    models.CharField(
                        choices=[
                            ("1", "Størst"),
                            ("2", "Stor"),
                            ("3", "Mellem"),
                            ("4", "lille"),
                            ("5", "mindst"),
                        ],
                        max_length=200,
                        verbose_name="Komfort værdi",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("install", "Installation"),
                            ("clima", "Klimaskærm"),
                            ("oth", "Andet"),
                        ],
                        max_length=200,
                        verbose_name="Kategori",
                    ),
                ),
                (
                    "can_be_suggested",
                    models.BooleanField(
                        default=True, verbose_name="Kan blive forslået"
                    ),
                ),
                (
                    "internal_note",
                    models.TextField(
                        blank=True, null=True, verbose_name="Interne noter"
                    ),
                ),
                (
                    "SEEB",
                    models.CharField(
                        choices=[
                            ("1-1-1-0", "1-1-1-0"),
                            ("1-1-2-0", "1-1-2-0"),
                            ("1-2-1-0", "1-2-1-0"),
                            ("1-2-2-0", "1-2-2-0"),
                            ("1-2-3-0", "1-2-3-0"),
                            ("1-3-1-0", "1-3-1-0"),
                            ("1-3-2-0", "1-3-2-0"),
                            ("1-3-3-0", "1-3-3-0"),
                            ("1-4-1-0", "1-4-1-0"),
                            ("1-4-1-1", "1-4-1-1"),
                            ("1-4-2-0", "1-4-2-0"),
                            ("1-4-3-0", "1-4-3-0"),
                            ("1-4-4-0", "1-4-4-0"),
                            ("1-5-1-0", "1-5-1-0"),
                            ("2-1-1-0", "2-1-1-0"),
                            ("2-1-2-0", "2-1-2-0"),
                            ("2-1-3-0", "2-1-3-0"),
                            ("2-1-4-0", "2-1-4-0"),
                            ("2-1-5-0", "2-1-5-0"),
                            ("2-1-6-0", "2-1-6-0"),
                            ("2-2-1-0", "2-2-1-0"),
                            ("2-2-2-0", "2-2-2-0"),
                            ("2-2-3-0", "2-2-3-0"),
                            ("2-2-4-0", "2-2-4-0"),
                            ("3-1-1-0", "3-1-1-0"),
                            ("3-1-3-0", "3-1-3-0"),
                            ("3-1-4-0", "3-1-4-0"),
                            ("3-1-5-0", "3-1-5-0"),
                            ("4-1-3-0", "4-1-3-0"),
                        ],
                        max_length=8,
                        verbose_name="SEEB",
                    ),
                ),
                ("draft", models.BooleanField(default=False, verbose_name="Træk")),
                (
                    "temperature",
                    models.BooleanField(default=False, verbose_name="Temperatur"),
                ),
                ("moisture", models.BooleanField(default=False, verbose_name="Fugt")),
                ("noise", models.BooleanField(default=False, verbose_name="Støj")),
                ("light", models.BooleanField(default=False, verbose_name="Dagslys")),
                ("title", models.CharField(max_length=400, verbose_name="Title")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Beskrivelse"),
                ),
                (
                    "read_more",
                    models.URLField(
                        blank=True,
                        max_length=400,
                        null=True,
                        verbose_name="Læs mere link 1:",
                    ),
                ),
                (
                    "read_more1",
                    models.URLField(
                        blank=True,
                        max_length=400,
                        null=True,
                        verbose_name="Læs mere link 2:",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creation",
                    models.DateTimeField(auto_now_add=True, verbose_name="oprettet"),
                ),
                ("original_draft", models.FloatField(verbose_name="Forslået træk")),
                ("updated_draft", models.FloatField(verbose_name="Bruger træk")),
                (
                    "original_temperature",
                    models.FloatField(verbose_name="Forslået temperatur"),
                ),
                (
                    "updated_temperature",
                    models.FloatField(verbose_name="Bruger temperatur"),
                ),
                ("original_moisture", models.FloatField(verbose_name="Forslået fugt")),
                ("updated_moisture", models.FloatField(verbose_name="Bruger fugt")),
                ("original_light", models.FloatField(verbose_name="Forslået lys")),
                ("updated_light", models.FloatField(verbose_name="Bruger lys")),
                ("original_noise", models.FloatField(verbose_name="Forslået støj")),
                ("updated_noise", models.FloatField(verbose_name="Bruger støj")),
                (
                    "house",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_models.House",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Municipality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Kommunenavn"
                    ),
                ),
                (
                    "admin_code",
                    models.CharField(
                        max_length=5, unique=True, verbose_name="Kommunekode"
                    ),
                ),
                (
                    "geo_boundary",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        srid=4326, verbose_name="Koordinater"
                    ),
                ),
                ("cities", models.ManyToManyField(to="data_models.City")),
            ],
        ),
        migrations.CreateModel(
            name="KomfortSurvey",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("draft", models.IntegerField(verbose_name="Træk")),
                ("temperature", models.IntegerField(verbose_name="Temperatur")),
                ("moisture", models.IntegerField(verbose_name="Fugt")),
                ("noise", models.IntegerField(verbose_name="Støj")),
                ("light", models.IntegerField(verbose_name="Dagslys")),
                ("smell", models.IntegerField(verbose_name="Lugt")),
                (
                    "roof_isolation",
                    models.BooleanField(default=False, verbose_name="Tag isolering"),
                ),
                (
                    "ceiling_isolation",
                    models.BooleanField(default=False, verbose_name="Loft isolering"),
                ),
                (
                    "floor_isolation",
                    models.BooleanField(
                        default=False, verbose_name="Isolering af gulv"
                    ),
                ),
                (
                    "socket_isolation",
                    models.BooleanField(
                        default=False, verbose_name="Isolering af sokkel"
                    ),
                ),
                (
                    "base_room_isolation",
                    models.BooleanField(
                        default=False, verbose_name="Isolering mellem kælder og stue"
                    ),
                ),
                (
                    "base_inside_isolation",
                    models.BooleanField(
                        default=False, verbose_name="Isolering af kældervæg indefra"
                    ),
                ),
                (
                    "base_outside_isolation",
                    models.BooleanField(
                        default=False, verbose_name="Isolering af kældervæg udefra"
                    ),
                ),
                (
                    "cavity_isolation",
                    models.BooleanField(default=False, verbose_name="Hulmursisolering"),
                ),
                (
                    "walls_outside",
                    models.BooleanField(
                        default=False, verbose_name="Isolering af ydervæg udefra"
                    ),
                ),
                (
                    "walls_inside",
                    models.BooleanField(
                        default=False, verbose_name="Isolering af ydervæg indefra"
                    ),
                ),
                (
                    "windows",
                    models.BooleanField(default=False, verbose_name="Nye vinduer"),
                ),
                (
                    "window_panes",
                    models.BooleanField(default=False, verbose_name="Nye ruder"),
                ),
                (
                    "doors",
                    models.BooleanField(default=False, verbose_name="Nye yderdøre"),
                ),
                (
                    "top_windows",
                    models.BooleanField(
                        default=False, verbose_name="Nye ovenlysvinduer"
                    ),
                ),
                (
                    "top_domes",
                    models.BooleanField(
                        default=False, verbose_name="Nye ovenlyskupler"
                    ),
                ),
                (
                    "window_sealing",
                    models.BooleanField(
                        default=False, verbose_name="Tætning af vinduer"
                    ),
                ),
                (
                    "remote_heat",
                    models.BooleanField(
                        default=False, verbose_name="Skift til fjernvarme"
                    ),
                ),
                (
                    "nat_gas",
                    models.BooleanField(
                        default=False, verbose_name="Skift til naturgas"
                    ),
                ),
                (
                    "bio_fuel",
                    models.BooleanField(
                        default=False, verbose_name="Skift til biobrændsel"
                    ),
                ),
                (
                    "gas_kettle",
                    models.BooleanField(default=False, verbose_name="Ny gaskedel"),
                ),
                (
                    "remot_heat_facil",
                    models.BooleanField(
                        default=False, verbose_name="Nyt fjernvarmeanlæg"
                    ),
                ),
                (
                    "water_con",
                    models.BooleanField(
                        default=False, verbose_name="Ny Varmtvandsbeholder"
                    ),
                ),
                (
                    "radiator_valves",
                    models.BooleanField(
                        default=False, verbose_name="Nye radiatorventiler"
                    ),
                ),
                (
                    "circu_pump_new",
                    models.BooleanField(
                        default=False, verbose_name="Ny cirkulationspumpe"
                    ),
                ),
                (
                    "circu_pump_mod",
                    models.BooleanField(
                        default=False, verbose_name="Ændring af cirkulationspumpe"
                    ),
                ),
                (
                    "automate_heat",
                    models.BooleanField(
                        default=False, verbose_name="Automatik til varmeanlæg"
                    ),
                ),
                (
                    "pipe_isolation",
                    models.BooleanField(default=False, verbose_name="Isolering af rør"),
                ),
                (
                    "ventilation_heat",
                    models.BooleanField(
                        default=False,
                        verbose_name="Ventilationsanlæg med varmegenvinding",
                    ),
                ),
                (
                    "sun_heat",
                    models.BooleanField(default=False, verbose_name="Solvarmeanlæg"),
                ),
                (
                    "sun_cells",
                    models.BooleanField(default=False, verbose_name="Solcelleanlæg"),
                ),
                (
                    "comment",
                    models.CharField(
                        default="", max_length=300, verbose_name="Kommentar"
                    ),
                ),
                (
                    "heat_pump",
                    models.BooleanField(
                        default=False, verbose_name="Skift til varmepumpe"
                    ),
                ),
                (
                    "percived_energyLabel",
                    models.CharField(
                        choices=[
                            ("0", ""),
                            ("1", "A"),
                            ("2", "B"),
                            ("3", "C"),
                            ("4", "D"),
                            ("5", "E"),
                            ("6", "F"),
                            ("7", "G"),
                        ],
                        default="0",
                        max_length=1,
                        verbose_name="Energimærke",
                    ),
                ),
                (
                    "house",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_models.House",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Improvement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seeb", models.CharField(max_length=7, verbose_name="SEEB klasse")),
                (
                    "co2Save",
                    models.FloatField(blank=True, null=True, verbose_name="CO2 Saved"),
                ),
                (
                    "fuelSave",
                    models.FloatField(blank=True, null=True, verbose_name="Fuel Saved"),
                ),
                (
                    "fuelMaterial",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Fuel material",
                    ),
                ),
                (
                    "fuelUnit",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Fuel Unit"
                    ),
                ),
                (
                    "moneySave",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Money Saved"
                    ),
                ),
                ("long_text", models.TextField(verbose_name="Lang beskrivelse")),
                (
                    "short_text",
                    models.CharField(max_length=700, verbose_name="Kort beskrivelse"),
                ),
                (
                    "profitable",
                    models.CharField(
                        max_length=50, verbose_name="Profitabel beskrivelse"
                    ),
                ),
                (
                    "house",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_models.House",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Navn")),
                ("value", models.CharField(max_length=200, verbose_name="Værdi")),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_models.Domain",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bbr",
            name="bbr_categorical",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="data_models.CategoricalBBR",
            ),
        ),
        migrations.AddField(
            model_name="bbr",
            name="bbr_numeric",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="data_models.NumericBBR",
            ),
        ),
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "decision",
                    models.CharField(
                        choices=[
                            ("done", "har gjort"),
                            ("will", "Vil gøre"),
                            ("Not", "vil ikke"),
                            ("None", "Ingen beslutning"),
                        ],
                        max_length=20,
                        verbose_name="Beslutning",
                    ),
                ),
                ("propability", models.FloatField(verbose_name="Sandsynlighed")),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_models.Suggestion",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_models.Session",
                    ),
                ),
            ],
        ),
    ]
